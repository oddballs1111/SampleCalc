@startuml
MainActivity --> InputContract
CalcController ..|> InputContract
CalcController --> State
CalcController -- CalcModel

State <|.. NumberAState
State <|.. NumberBState
State <|.. ResultState
State <|.. OperationState

CalcModel -- Operation

class MainActivity{
}

interface InputContract {
  +{abstract} onInputNumber(int)
  +{abstract} onInputOperation(Operation)
  +{abstract} onInputEqual()
}

class CalcController {
  -CalcModel model
  -State state
}


class CalcModel {
  -BigDecimal numA
  -BigDecimal numB
  -String dispNum
  - Opetation ope
}

interface State {
  + {abstract} InputNumber(int, State)
  + {abstract} InputOperation(Operation, State)
  + {abstract} InputEqual(State)
}

class NumberAState {
}

class OperationState {
}

class NumberBState {
}

class ResultState {
}

enum Operation{
  PLUS
  MINUS
  MULTI
  DIV

  +eval(int,int)
}


note right of InputContract
  Activityの入力処理を通知するインターフェース
end note
@enduml